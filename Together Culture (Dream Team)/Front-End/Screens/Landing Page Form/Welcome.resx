<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>